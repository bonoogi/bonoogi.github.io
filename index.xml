<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Hell yeah, World</title><link>https://bonoogi.github.io/</link><description>Recent content on Hell yeah, World</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 06 Mar 2022 22:57:09 +0900</lastBuildDate><atom:link href="https://bonoogi.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>[Swift] Combine의 Backpressure 처리</title><link>https://bonoogi.github.io/posts/2022-03-06-combine-backpressure/</link><pubDate>Sun, 06 Mar 2022 22:57:09 +0900</pubDate><guid>https://bonoogi.github.io/posts/2022-03-06-combine-backpressure/</guid><description>Combine이든 RxSwift든 리액티브 프로그래밍 프레임워크를 다루다보면 한번씩 마주하게 되는 문제가 몇가지 있다. 하나는 메모리 관리 문제고(보통 이건 초심자가 많이 겪는다), 또 하나는 배압(Backpressure) 문제다. 리액티브 프로그래밍에서 배압이란 무엇을 말하는가? 구독자와 게시자가 있다고 할 때, 구독자가 값(혹은 이벤트)을 소비하는 속도가 게시자가 값을 보내는 속도를 따라가지 못하는 상황을 일컫는다. 이게 원래는 유체동역학 용어(위키백과: Back Pressure)라는데, 프로그래밍 관점에서 리액티브 프로그래밍이라는게 값의 흐름이니 정말 적절한 용어가 아닌가 싶다.
여튼 이런 배압 문제는 일반적으로는 쉽게 발생하지 않는다.</description></item></channel></rss>